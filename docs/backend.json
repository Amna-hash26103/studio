{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user's profile in the Femmora app.",
      "properties": {
        "username": {
          "type": "string",
          "description": "The user's display name."
        },
        "bio": {
          "type": "string",
          "description": "A short biography or description of the user."
        },
        "profilePic": {
          "type": "string",
          "description": "URL of the user's profile photo.",
          "format": "uri"
        },
        "savedPosts": {
          "type": "array",
          "description": "An array of postIds that the user has saved.",
          "items": {
            "type": "string"
          }
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        }
      },
      "required": [
        "username",
        "email"
      ]
    },
    "CommunityPost": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CommunityPost",
      "type": "object",
      "description": "Represents a post in the community feed.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The ID of the user who created the post."
        },
        "content": {
          "type": "string",
          "description": "The main text content of the post."
        },
        "imageUrl": {
          "type": "string",
          "format": "uri",
          "description": "Optional image attached to the post."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the post was created."
        },
        "likes": {
          "type": "array",
          "description": "An array of userIds who have liked the post.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "userId",
        "content",
        "timestamp"
      ]
    },
    "Comment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Comment",
      "type": "object",
      "description": "Represents a comment on a community post.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The ID of the user who created the comment."
        },
        "text": {
          "type": "string",
          "description": "The text content of the comment."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of when the comment was created."
        }
      },
      "required": [
        "userId",
        "text",
        "timestamp"
      ]
    },
    "Period": {
      "title": "Period",
      "description": "Represents one complete menstrual cycle for a user.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "number"
        },
        "notes": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "startDate",
        "createdAt"
      ]
    },
    "DailyLog": {
      "title": "DailyLog",
      "description": "Represents a daily log for a specific day within a period.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "flowLevel": {
          "type": "string",
          "enum": [
            "spotting",
            "light",
            "medium",
            "heavy"
          ]
        },
        "painLevel": {
          "type": "number"
        },
        "mood": {
          "type": "string"
        },
        "symptoms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "date",
        "flowLevel"
      ]
    },
    "UserStats": {
      "title": "UserStats",
      "description": "Stores computed summary statistics for a user's cycles.",
      "type": "object",
      "properties": {
        "averageCycleLength": {
          "type": "number"
        },
        "averagePeriodDuration": {
          "type": "number"
        },
        "averageFlowIntensity": {
          "type": "string"
        },
        "predictedNextStart": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MealLog": {
      "title": "MealLog",
      "description": "Represents a single meal logged by the user.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The user's description of the meal."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "calories": {
          "type": "number"
        },
        "protein": {
          "type": "number",
          "description": "in grams"
        },
        "carbs": {
          "type": "number",
          "description": "in grams"
        },
        "fat": {
          "type": "number",
          "description": "in grams"
        },
        "fiber": {
          "type": "number",
          "description": "in grams"
        }
      },
      "required": [
        "id",
        "userId",
        "description",
        "createdAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/entities/UserProfile"
          },
          "description": "Stores user profile information. The 'userId' parameter corresponds to the Firebase Authentication UID."
        }
      },
      {
        "path": "/posts/{postId}",
        "definition": {
          "entityName": "CommunityPost",
          "schema": {
            "$ref": "#/entities/CommunityPost"
          },
          "description": "Stores community posts accessible to all authenticated users."
        }
      },
      {
        "path": "/posts/{postId}/comments/{commentId}",
        "definition": {
          "entityName": "Comment",
          "schema": {
            "$ref": "#/entities/Comment"
          },
          "description": "Stores comments for a specific post."
        }
      },
      {
        "path": "/users/{userId}/periods/{periodId}",
        "definition": {
          "entityName": "Period",
          "schema": {
            "$ref": "#/entities/Period"
          },
          "description": "Stores a user's menstrual cycle entries."
        }
      },
      {
        "path": "/users/{userId}/periods/{periodId}/dailyLogs/{dailyLogId}",
        "definition": {
          "entityName": "DailyLog",
          "schema": {
            "$ref": "#/entities/DailyLog"
          },
          "description": "Stores daily logs for a specific menstrual cycle."
        }
      },
      {
        "path": "/users/{userId}/stats/{statId}",
        "definition": {
          "entityName": "UserStats",
          "schema": {
            "$ref": "#/entities/UserStats"
          },
          "description": "Stores computed summary statistics for a user's cycles. Should be a singleton document, e.g., using a fixed statId like 'summary'."
        }
      },
      {
        "path": "/users/{userId}/mealLogs/{mealLogId}",
        "definition": {
          "entityName": "MealLog",
          "schema": {
            "$ref": "#/entities/MealLog"
          },
          "description": "Stores a user's meal log entries."
        }
      }
    ]
  }
}
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user's profile in the Femmora app.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user profile."
        },
        "displayName": {
          "type": "string",
          "description": "The user's display name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "phoneNumber": {
          "type": "string",
          "description": "The user's phone number."
        },
        "profilePhotoURL": {
          "type": "string",
          "description": "URL of the user's profile photo.",
          "format": "uri"
        },
        "coverPhotoURL": {
          "type": "string",
          "description": "URL of the user's cover photo.",
          "format": "uri"
        },
        "bio": {
          "type": "string",
          "description": "A short biography or description of the user."
        },
        "interests": {
          "type": "array",
          "description": "An array of the user's interests.",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "description": "The user's location (optional)."
        },
        "projectIds": {
          "type": "array",
          "description": "References to Projects created by the user. (Relationship: UserProfile 1:N Project)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["id", "displayName", "email"]
    },
    "CommunityPost": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "CommunityPost",
      "type": "object",
      "description": "Represents a post in the community feed.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the post."
        },
        "authorId": {
          "type": "string",
          "description": "The ID of the user who created the post."
        },
        "author": {
          "type": "string",
          "description": "The display name of the post author."
        },
        "avatar": {
          "type": "string",
          "description": "URL of the author's avatar.",
          "format": "uri"
        },
        "time": {
          "type": "string",
          "description": "Timestamp of when the post was created."
        },
        "content": {
          "type": "string",
          "description": "The main text content of the post."
        },
        "originalContent": {
          "type": "string",
          "description": "The original, untranslated content of the post."
        },
        "image": {
          "type": "object",
          "properties": {
            "imageUrl": { "type": "string", "format": "uri" },
            "imageHint": { "type": "string" }
          },
          "description": "Optional image attached to the post."
        },
        "likes": {
          "type": "number",
          "description": "The number of likes on the post."
        },
        "comments": {
          "type": "number",
          "description": "The number of comments on the post."
        },
        "lang": {
          "type": "string",
          "description": "The language code (e.g., 'en', 'ur') of the post's content."
        },
        "isTranslated": {
          "type": "boolean",
          "description": "Flag indicating if the content is currently a translated version."
        },
        "translation": {
          "type": "string",
          "description": "The translated content of the post, if available."
        }
      },
      "required": ["id", "authorId", "author", "time", "content", "lang"]
    },
    "Period": {
      "title": "Period",
      "description": "Represents one complete menstrual cycle for a user.",
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "userId": { "type": "string" },
        "startDate": { "type": "string", "format": "date-time" },
        "endDate": { "type": "string", "format": "date-time" },
        "duration": { "type": "number" },
        "notes": { "type": "string" },
        "createdAt": { "type": "string", "format": "date-time" }
      },
      "required": ["id", "userId", "startDate", "createdAt"]
    },
    "DailyLog": {
      "title": "DailyLog",
      "description": "Represents a daily log for a specific day within a period.",
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "date": { "type": "string", "format": "date-time" },
        "flowLevel": {
          "type": "string",
          "enum": ["spotting", "light", "medium", "heavy"]
        },
        "painLevel": { "type": "number" },
        "mood": { "type": "string" },
        "symptoms": { "type": "array", "items": { "type": "string" } },
        "notes": { "type": "string" }
      },
      "required": ["id", "date", "flowLevel"]
    },
    "UserStats": {
      "title": "UserStats",
      "description": "Stores computed summary statistics for a user's cycles.",
      "type": "object",
      "properties": {
        "averageCycleLength": { "type": "number" },
        "averagePeriodDuration": { "type": "number" },
        "averageFlowIntensity": { "type": "string" },
        "predictedNextStart": { "type": "string", "format": "date-time" },
        "lastUpdated": { "type": "string", "format": "date-time" }
      }
    },
    "MealLog": {
      "title": "MealLog",
      "description": "Represents a single meal logged by the user.",
      "type": "object",
      "properties": {
        "id": { "type": "string" },
        "userId": { "type": "string" },
        "description": { "type": "string", "description": "The user's description of the meal." },
        "createdAt": { "type": "string", "format": "date-time" },
        "calories": { "type": "number" },
        "protein": { "type": "number", "description": "in grams" },
        "carbs": { "type": "number", "description": "in grams" },
        "fat": { "type": "number", "description": "in grams" },
        "fiber": { "type": "number", "description": "in grams" }
      },
      "required": ["id", "userId", "description", "createdAt"]
    }
  },
  "auth": {
    "providers": ["password", "anonymous"]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": { "$ref": "#/entities/UserProfile" },
          "description": "Stores user profile information. The 'userId' parameter corresponds to the Firebase Authentication UID."
        }
      },
      {
        "path": "/users/{userId}/periods/{periodId}",
        "definition": {
          "entityName": "Period",
          "schema": { "$ref": "#/entities/Period" },
          "description": "Stores a user's menstrual cycle entries."
        }
      },
      {
        "path": "/users/{userId}/periods/{periodId}/dailyLogs/{dailyLogId}",
        "definition": {
          "entityName": "DailyLog",
          "schema": { "$ref": "#/entities/DailyLog" },
          "description": "Stores daily logs for a specific menstrual cycle."
        }
      },
      {
        "path": "/users/{userId}/stats/{statId}",
        "definition": {
          "entityName": "UserStats",
          "schema": { "$ref": "#/entities/UserStats" },
          "description": "Stores computed summary statistics for a user's cycles. Should be a singleton document, e.g., using a fixed statId like 'summary'."
        }
      },
      {
        "path": "/community_posts/{postId}",
        "definition": {
          "entityName": "CommunityPost",
          "schema": { "$ref": "#/entities/CommunityPost" },
          "description": "Stores community posts accessible based on privacy settings."
        }
      },
      {
        "path": "/users/{userId}/mealLogs/{mealLogId}",
        "definition": {
          "entityName": "MealLog",
          "schema": { "$ref": "#/entities/MealLog" },
          "description": "Stores a user's meal log entries."
        }
      }
    ]
  }
}

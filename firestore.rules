rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data.
    match /users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for the posts collection
    match /posts/{postId} {
      // Anyone authenticated can read posts.
      allow read: if request.auth != null;
      
      // A user can create a post if they are authenticated and are the author.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // A user can update a post if they are the author (for content changes)
      // OR if they are only changing the 'likes' array.
      allow update: if request.auth != null && 
                      (resource.data.userId == request.auth.uid || 
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']));
                       
      // A user can delete a post only if they are the author.
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Rules for the comments subcollection
    match /posts/{postId}/comments/{commentId} {
      // Anyone authenticated can read comments.
      allow read: if request.auth != null;
      
      // Anyone authenticated can create a comment, as long as they are the author of that comment.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // A user can update or delete a comment only if they are its author.
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}

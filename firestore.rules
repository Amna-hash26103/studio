rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // USERS
    match /users/{userId} {
      // anyone logged-in can read user profiles
      allow read: if request.auth != null;

      // create a user doc only if the authenticated uid matches the document id
      allow create: if request.auth != null && request.auth.uid == userId;

      // only the owner can update or delete their profile
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // POSTS
    match /posts/{postId} {
      // allow reads (list + get) for authenticated users
      allow read: if request.auth != null;

      // create a post only if the post.userId is the caller and required fields exist
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.keys().hasAll(['userId','content','timestamp'])
                    && request.resource.data.content is string;

      // only the creator can update or delete their post
      allow update, delete: if request.auth != null
                            && resource.data.userId == request.auth.uid;

      // subcollection comments
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null
                      && request.resource.data.userId == request.auth.uid
                      && request.resource.data.keys().hasAll(['userId','text','timestamp']);
        allow update, delete: if request.auth != null
                              && resource.data.userId == request.auth.uid;
      }
    }
  }
}

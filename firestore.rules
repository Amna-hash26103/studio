rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user requesting the data is the owner.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read any user's profile.
      allow read: if isAuthenticated();
      // Only the owner can write to their own profile.
      allow write: if isOwner(userId);

      // Rules for nested collections under 'users'
      match /{document=**} {
        // Only the owner can read/write to their own subcollections.
        allow read, write: if isOwner(userId);
      }
    }
    
    // Rules for the 'community_posts' collection
    match /community_posts/{postId} {
        // Allow reads and writes for authenticated users.
        allow read, list, create, update, delete: if isAuthenticated();
    }
  }
}
